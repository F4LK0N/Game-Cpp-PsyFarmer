#include "Item.h"



//#####################################################################################################################################################################
Item::Item(){
	status=false;
	type=-1;
	x=-1;
	y=-1;
	drawX=0;
	drawY=0;
	moving=false;
	falling=false;
	fallingDelay=0;
	spritesheet.setAncora(0, 0);
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################





//#####################################################################################################################################################################
Item::~Item(){}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################





//#####################################################################################################################################################################
void Item::load(int type, int x, int y)
{
	status=true;
	this->type=type;
	this->x=x;
	this->y=y;

	//Corn Bag (Saco de Ouro)
	if(type==3){
		this->spritesheet.setSpriteSheet("ITEMcornBag"); }
	
	//Agrotixic (Pedra)
	else if(type==4){
		this->spritesheet.setSpriteSheet("ITEMagrotoxic"); }

	//Special
	else if(type==5){
		this->spritesheet.setSpriteSheet("ITEMspecial"); }
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
void Item::draw(int canvasStartX, int canvasStartY){
	if(!status){ return; }
	
	//Moving
	if(drawX>0){ drawX-=1; }else if(drawX<0){ drawX+=1; }
	if(drawY>0){ drawY-=1; }else if(drawY<0){ drawY+=1; }
	//Stop
	if(drawX==0 && drawY==0){
		moving=false; }
	//Draw
	spritesheet.desenhar(canvasStartX+drawX+(this->x*64), canvasStartY+drawY+(this->y*64));

	//Anim
	if(falling){ spritesheet.avancarAnimacao(); }
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
bool Item::move(int dirX, int dirY){

	if(moving || !status){ return false; }

	extern int **mapTiles;
	extern int mapRows;
	extern int mapCols;

	int targetX=(x+dirX);
	int targetY=(y+dirY);
	if(targetX<0 || targetX>mapCols-1){ return false; }
	if(targetY<0 || targetY>mapRows-1){ return false; }
	
	int *targetTile=&mapTiles[targetY][targetX];
	int *originTile=&mapTiles[y][x];

	//BLOCKED
	if(*targetTile!=0){ return false; }

	//MOVE
	*targetTile=type;
	*originTile=0;
	x=targetX;   y=targetY;
	drawX+=64*dirX*-1;   drawY+=64*dirY*-1;
	moving=true;
	return true;
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
void Item::fall(){

	if(!status || moving || (type!=3 && type!=4)){ return; }
	
	extern int **mapTiles;
	extern int mapRows;
	extern int mapCols;
	
	//HOLDING
	if(!falling && y<mapRows-1){
		if(mapTiles[y+1][x]!=0){ return; }
		falling=true;
		fallingDelay=64*2;
	}
	//FALLING
	else{
		if(fallingDelay>0){ fallingDelay--; return; }
		if(!move(0, 1)){
			//OPEN (BAG)
			if(type==3){
				mapTiles[y][x]=39;
				status=false; }
			//STOP
			else{
				spritesheet.setFrame(0);
				falling=false; }
		}
	}
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
int Item::getX(){ return x; }
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
int Item::getY(){ return y; }
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
bool Item::isActive(){ return status; }
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################