#include "Player.h"



//#####################################################################################################################################################################
Player::Player(){
	spritesheetName="";
	imagePath="";
	animations=0;
	frames=0;
	x=0; startX=0;
	y=0; startY=0;
	drawX=0;
	drawY=0;
	moving=false;
	spritesheet.setAncora(0, 0);
	score=0;
	lifes=3;
	invulnerable=0;
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
Player::~Player(){}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
void Player::load(string spritesheetName, string imagePath, int animations, int frames, int x, int y)
{
	this->spritesheetName=spritesheetName;
	this->imagePath=imagePath;
	this->animations=animations;
	this->frames=frames;
	this->x=x;   this->startX=x;
	this->y=y;   this->startY=y;
	this->lifes=3;

	//CHECK SPRITESHEET
	unload();
	ifstream file;
	do{
		//DLC
		file.open("dlcs/"+imagePath);
		if(file.is_open()){
			this->imagePath="dlcs/"+imagePath;
			break; }

		//INTERNAL
		file.open("_internal/"+imagePath);
		if(file.is_open()){
			this->imagePath="_internal/"+imagePath;
			break; }
		
		//DEFAULT
		this->animations=8;
		this->frames=12;
		this->imagePath="_internal/images/000-default-player.png";

	}while(false);//<-- Sorry about this :P
	file.close();

	
	//LOAD SET SPRITESHEET
	gRecursos.carregarSpriteSheet(this->spritesheetName, this->imagePath, this->animations, this->frames);
	this->spritesheet.setSpriteSheet(this->spritesheetName);
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
void Player::unload(){
	if(this->spritesheetName!=""){
		gRecursos.descarregarSpriteSheet(this->spritesheetName);   }}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
int Player::getX(){
	return x; }
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
int Player::getY(){
	return y; }
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
void Player::draw(int canvasStartX, int canvasStartY){
	if(invulnerable%10>=5){ return; }
	spritesheet.desenhar(canvasStartX+drawX+(this->x*64), canvasStartY+drawY+(this->y*64));   }
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
void Player::animate(){
	//Anim
	spritesheet.avancarAnimacao();
	//Moving
	if(drawX>0){ drawX-=1; }else if(drawX<0){ drawX+=1; }
	if(drawY>0){ drawY-=1; }else if(drawY<0){ drawY+=1; }
	//Stop
	if(drawX==0 && drawY==0){
		moving=false; 
		if(spritesheet.getAnimacao()>3){ 
			spritesheet.setVelocidadeAnimacao(1);
			spritesheet.setAnimacao(spritesheet.getAnimacao()-4); }
	}
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
void Player::control(Item *itens, int itensQt){

	if(invulnerable>0){ invulnerable--; }
	
	if(moving){ return; }

	extern int **mapTiles;
	extern int mapRows;
	extern int mapCols;
	
	//### DIRECTION ###
	int dirX=0, dirY=0;
	// RIGHT
		 if((gTeclado.segurando[TECLA_D] || gTeclado.segurando[TECLA_DIR])   && x<mapCols-1){ dirX=1; }
	//LEFT
	else if((gTeclado.segurando[TECLA_A] || gTeclado.segurando[TECLA_ESQ])   && x>0){         dirX=-1; }
	//UP
	else if((gTeclado.segurando[TECLA_W] || gTeclado.segurando[TECLA_CIMA])  && y>0){         dirY=-1; }
	//DOWN
	else if((gTeclado.segurando[TECLA_S] || gTeclado.segurando[TECLA_BAIXO]) && y<mapRows-1){ dirY=1; }
	//HOLD
	else{ return; }
	
	//### MOVE ###
	int targetX=(x+dirX);
	int targetY=(y+dirY);
	int *targetTile=&mapTiles[targetY][targetX];

	//TILES
	switch(*targetTile){
		//CORN
		case 2:
			score+=10;   break;

		//BAG (open)
		case 39:
			score+=50;   break;

		//BAG|AGROTOXIC
		case 3: case 4:
			for(int i=0; i<itensQt; i++){   if(  itens[i].getX()==targetX  &&  itens[i].getY()==targetY  ){
				if(!itens[i].move(dirX, dirY)){ return; }
			}}
		break;
	}
	//MOVE
	*targetTile=0;
	this->move(dirX, dirY);
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
void Player::move(int dirX, int dirY){
	/*RIGHT*/if(dirX>0){ drawX=-64;  x+=1;  spritesheet.setAnimacao(4);  spritesheet.setVelocidadeAnimacao(10); }
	/*LEFT*/ if(dirX<0){ drawX= 64;  x-=1;  spritesheet.setAnimacao(5);  spritesheet.setVelocidadeAnimacao(10); }
	/*UP*/   if(dirY<0){ drawY= 64;  y-=1;  spritesheet.setAnimacao(6);  spritesheet.setVelocidadeAnimacao(4); }
	/*DOWN*/ if(dirY>0){ drawY=-64;  y+=1;  spritesheet.setAnimacao(7);  spritesheet.setVelocidadeAnimacao(4); }
	spritesheet.setFrame(0);
	moving=true;
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
void Player::die(){
	if(lifes>0){ lifes-=1; }
	x=startX;
	y=startY;
	drawX=0;
	drawY=0;
	invulnerable=240;
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
bool Player::isInvulnerable(){
	if(invulnerable==0){ return false; }
	return true;
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
int Player::getScore(){ return score; }
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
int Player::getLifes(){ return lifes; }
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################



//#####################################################################################################################################################################
void Player::reset(){
	lifes=3;
	score=0;
}
//#####################################################################################################################################################################
//#####################################################################################################################################################################
//#####################################################################################################################################################################